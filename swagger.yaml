swagger: "2.0"
info:
  version: "1.0.0"
  title: FoodList API
host: localhost:8081
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /foods:
    get:
      tags:
        - foods
      description: Returns Food List to the user
      operationId: food
      parameters:
        - name: page
          in: query
          description: The number of current page
          required: false
          type: string
        - name: limit
          in: query
          description: The limit number of ocurrences that must be showed per page
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - foods
      description: Submit an new Food to the list
      operationId: food
      parameters:
        - name: refillable
          in: body
          description: If this food is refillable at least one time
          required: true
          type: boolean
        - name: drinkable
          in: body
          description: If this food is able to drink
          required: true
          type: boolean
        - name: name
          in: body
          description: Name of the current food
          required: true
          type: string
        - name: price
          in: body
          description: Price to buy the current food
          required: true
          type: Number
        - name: size
          in: body
          description: The number of current page
          required: false
          type: string
          enum:
            - P
            - M
            - G
            - Default
        - name: spicy
          in: body
          description: If the food have is spicy
          required: false
          type: string
          enum:
            - Light
            - Medium
            - Hot
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /foods/{foodId}:
    get:
      tags:
        - foodById
      description: Returns exclusive food by id
      operationId: food
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - foodById
      description: Edit informations from an specific Food
      operationId: food
      parameters:
        - name: refillable
          in: query
          description: If this food is refillable at least one time
          required: false
          type: boolean
        - name: drinkable
          in: query
          description: If this food is able to drink
          required: false
          type: boolean
        - name: name
          in: body
          description: Name of the current food
          required: false
          type: string
        - name: price
          in: body
          description: Price to buy the current food
          required: false
          type: Number
        - name: size
          in: query
          description: The number of current page
          required: false
          type: string
          enum:
            - P
            - M
            - G
            - Default
        - name: spicy
          in: body
          description: If the food have is spicy
          required: false
          type: string
          enum:
            - Light
            - Medium
            - Hot
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - foodById
      description: Edit only one atribute from an specific Food
      operationId: food
      parameters:
        - name: refillable
          in: query
          description: If this food is refillable at least one time
          required: false
          type: boolean
        - name: drinkable
          in: query
          description: If this food is able to drink
          required: false
          type: boolean
        - name: name
          in: body
          description: Name of the current food
          required: false
          type: string
        - name: price
          in: body
          description: Price to buy the current food
          required: false
          type: Number
        - name: size
          in: query
          description: The number of current page
          required: false
          type: string
          enum:
            - P
            - M
            - G
            - Default
        - name: spicy
          in: body
          description: If the food have is spicy
          required: false
          type: string
          enum:
            - Light
            - Medium
            - Hot
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - foodById
      description: Remove the specific food from Food List
      operationId: food
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /combos:
    get:
      tags:
        - combos
      description: Returns Combo List to the user
      operationId: combo
      parameters:
        - name: page
          in: query
          description: The number of current page
          required: false
          type: string
        - name: limit
          in: query
          description: The limit number of ocurrences that must be showed per page
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - combos
      description: Submit an new Combo to the list
      operationId: combo
      parameters:
        - name: name
          in: body
          description: Name of the current combo
          required: true
          type: string
        - name: foods
          in: body
          description: List of foods attached to this combo
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/partialFoodDefinition'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /combos/{comboId}:
    get:
      tags:
        - comboById
      description: Returns exclusive combo by id
      operationId: combo
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - comboById
      description: Edit informations from an specific Combo
      operationId: combo
      parameters:
        - name: name
          in: body
          description: Name of the current combo
          required: true
          type: boolean
        - name: foods
          in: body
          description: List of foods attached to this combo
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/partialFoodDefinition'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - comboById
      description: Edit only one atribute from an specific Combo
      operationId: combo
      parameters:
        - name: name
          in: body
          description: Name of the current combo
          required: true
          type: boolean
        - name: foods
          in: body
          description: List of foods attached to this combo
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/partialFoodDefinition'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - comboById
      description: Remove the specific combo from Combo List
      operationId: combo
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  foodDefinition:
    required:
      - name
      - price
      - size
      - drinkable
      - refillable
    properties:
      name:
        type: string
      price:
        type: number
      size:
        type: string
      spicy:
        type: string
      drinkable:
        type: boolean
      refillable:
        type: boolean
      image:
        type: string
      ingredients:
        schema:
          type: array
          items:
            $ref: "#/definitions/ingredientsDefinition"
  ingredientsDefinition:
    required:
      - name
      - isExpired
    properties:
      name:
        type: string
      isExpired:
        type: boolean
  partialFoodDefinition:
    required:
      - name
      - price
      - size
    properties:
      name:
        type: string
      price:
        type: number
      size:
        type: string
      refillable:
        type: boolean
      image:
        type: string
  UndefinedYetResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
