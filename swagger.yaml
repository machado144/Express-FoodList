swagger: "2.0"
info:
  version: "1.0.0"
  title: FoodList API
host: localhost:8081
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /foods:
    get:
      tags:
        - foods
      description: Returns Food List to the user
      operationId: food
      parameters:
        - name: page
          in: query
          description: The number of current page
          required: false
          type: string
        - name: limit
          in: query
          description: The limit number of ocurrences that must be showed per page
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - foods
      description: Submit an new Food to the list
      operationId: food
      parameters:
        - in: body
          name: postFoodPayload
          description: Payload format to submit an new food
          schema:
            type: object
            required:
              - refillable
              - drinkable
              - name
              - price
            properties:
              refillable:
                type: boolean
              drinkable:
                type: boolean
              name:
                type: string
              price:
                type: number
              size:
                type: string
              spicy:
                type: string
              ingredients:
                type: array
                items:
                  $ref: "#/definitions/ingredientsDefinition"
            example:
              name: "Burrito"
              refillable: true
              drinkable: false
              price: 2.17
              size: "P"
              spicy: "Hot"
              ingredients:
                - name: "Lettuce"
                  isExpired: false
                - name: "Onions"
                  isExpired: false
                - name: "Meat"
                  isExpired: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /foods/{foodId}:
    get:
      tags:
        - foodById
      description: Returns exclusive food by id
      operationId: food
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - foodById
      description: Edit informations from an specific Food
      operationId: food
      parameters:
        - in: body
          name: putFoodPayload
          description: Payload format to edit the current Food
          schema:
            type: object
            properties:
              refillable:
                type: boolean
              drinkable:
                type: boolean
              name:
                type: string
              price:
                type: number
              size:
                type: string
              spicy:
                type: string
              ingredients:
                type: array
                items:
                  $ref: "#/definitions/ingredientsDefinition"
            example:
              name: "Burrito"
              refillable: true
              drinkable: false
              price: 2.17
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - foodById
      description: Edit only one atribute from an specific Food
      operationId: food
      parameters:
        - in: body
          name: patchFoodPayload
          description: Payload format to edit the current Food
          schema:
            type: object
            properties:
              refillable:
                type: boolean
              drinkable:
                type: boolean
              name:
                type: string
              price:
                type: number
              size:
                type: string
              spicy:
                type: string
              ingredients:
                type: array
                items:
                  $ref: "#/definitions/ingredientsDefinition"
            example:
              name: "Burrito Patched"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - foodById
      description: Remove the specific food from Food List
      operationId: food
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /combos:
    get:
      tags:
        - combos
      description: Returns Combo List to the user
      operationId: combo
      parameters:
        - name: page
          in: query
          description: The number of current page
          required: false
          type: string
        - name: limit
          in: query
          description: The limit number of ocurrences that must be showed per page
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - combos
      description: Submit an new Combo to the list
      operationId: combo
      parameters:
        - in: body
          name: postComboPayload
          description: Payload format to submit an new Combo
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              foods:
                type: array
                items:
                  $ref: "#/definitions/partialFoodDefinition"
            example:
              name: "Burrito"
              foods:
                - name: "Burrito"
                  size: "M"
                  price: 5.13
                  refillable: false
                - name: "Taco"
                  size: "M"
                  price: 12.50
                  refillable: false
                - name: "Drink"
                  size: "M"
                  price: 5.13
                  refillable: false
                  image: "http://lorempixel.com/640/480/food"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /combos/{comboId}:
    get:
      tags:
        - comboById
      description: Returns exclusive combo by id
      operationId: combo
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - comboById
      description: Edit informations from an specific Combo
      operationId: combo
      parameters:
        - in: body
          name: putComboPayload
          description: Payload format to edit the current Combo
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              foods:
                type: array
                items:
                  $ref: "#/definitions/partialFoodDefinition"
            example:
              name: "Burrito"
              foods:
                - name: "Burrito Put"
                  size: "M"
                  price: 6.13
                  refillable: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - comboById
      description: Edit only one atribute from an specific Combo
      operationId: combo
      parameters:
        - in: body
          name: patchComboPayload
          description: Payload format to edit the current Combo
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              foods:
                type: array
                items:
                  $ref: "#/definitions/partialFoodDefinition"
            example:
              name: "Burrito Patched"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - comboById
      description: Remove the specific combo from Combo List
      operationId: combo
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UndefinedYetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  foodDefinition:
    required:
      - name
      - price
      - size
      - drinkable
      - refillable
    properties:
      name:
        type: string
      price:
        type: number
      size:
        type: string
      drinkable:
        type: boolean
      refillable:
        type: boolean
      image:
        type: string
      spicy:
        type: string
      ingredients:
        schema:
          type: array
          items:
            $ref: "#/definitions/ingredientsDefinition"
  ingredientsDefinition:
    required:
      - name
      - isExpired
    properties:
      name:
        type: string
      isExpired:
        type: boolean
  partialFoodDefinition:
    required:
      - name
      - price
      - size
    properties:
      name:
        type: string
      price:
        type: number
      size:
        type: string
      refillable:
        type: boolean
      image:
        type: string
  UndefinedYetResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
